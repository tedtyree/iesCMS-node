[[{Template:admin_vue,MinViewLevel:3,MinEditLevel:5,ShowAdminMenuLink:false,Page_Title:Admin Edit short-list}]]
[[js:ckFinderLogin]]
<table cellspacing="0" cellpadding="0" border="0" width="1020">
<colgroup>
	<col width="30" />
	<col width="5" />
	<col width="80" />
	<col width="680" />
	<col />
	<col width="6" />
</colgroup>

<tbody>
	<tr>
		<td colspan="3" style="padding-bottom: 0px; padding-left: 15px; padding-right: 15px; padding-top: 0px">

			<div align=center style="margin:0;padding:0;">

				<table width="820px" height="32" cellspacing=0 cellpadding=5 bgcolor="#485E7E">
					<col width="410px" />
					<col width="410px" />
					
					<tr>
						<td>
							<font style="font-size:18px;font-weight:bold;color:#6090C0;">
								<div id="editlist_title" style="width:405px;">[[admin-editlist-param:Title]]</div>
							</font>
						</td>
						
						<td align=right>
 							
							<div id="buttons_search1" class="button_group_search" style='display:inline;'>
								<span class="button_Add_span"><input type="button" id="editlist_add1" name="Add" value="Add" onClick="OpenItem('*new*');return false;"> / </span>
								<input type="button" id="editlist_refresh1" name="Refresh" value="Refresh" onClick="ShowPanel('loading');RefreshList(true);return false;">
							</div>
							<div id="buttons_save1" class="button_group_save" style="display:none;">
								<span class="button_SaveClose_span"><input type="button" name="SaveClose" value="Save/Close" onClick="SaveItem(true);return false;"> / </span>
								<span class="button_Save_span"><input type="button" name="Save" value="Save" onClick="SaveItem(false);return false;"> / </span>
								<span class="button_Cancel_span"><input type="button" name="Cancel" value="Cancel" onClick="CancelEdit();return false;"></span>
								<span class="button_Delete_span"> / <input type="button" name="Delete" value="Delete" onClick="DeleteItem();return false;"></span>
							</div>
							
						</td>
					</tr>
				</table>
				
				<div id="editlist_search" style="width:820px;background:#E9E9E9;padding-left:12px;padding-right:10px;margin-top:5px;margin-bottom:5px;">
				&nbsp;<br>
[[block:admin_editlist_params:table]]
<div id='editlist-data' style='background:#FFFFFF;'>
<!-- app -->
<div id="app">
  <div class="base-demo" style="width: 400px">
		<div id="editlist_searchbox" style='display:inline;'>
								Search&nbsp;<input type="text" id="fltSearch" name="fltSearch" v-model="vSearch" v-on:keyup="doKeypress($event)" >
								&nbsp;&nbsp;
								History&nbsp;<input type="checkbox" id="fltHistory" name="fltHistory" 
								v-model="vHistory"  @click="startSearchTimer();" >
		</div> 
		
	<table class="table table-hover editlisttable">
		<thead><tr><th v-for="col in params.columns" scope="col">{{ col.sTitle }}</th></tr></thead>
		<tr v-for="row in params.rows" @click="clickRow(row[params.rowid])" >
			<td v-for="colz in params.columns">{{ row[colz.data] }}</td>
		</tr>
	</table>
  </div>
</div>
</div>
				<br>&nbsp;
				</div>
				
				<div id="editlist_form" style="width:820px;display: none;">
				</div>
				
				<table width="820px" height="32" cellspacing=0 cellpadding=5 bgcolor="#485E7E"><col width="310px"><col width="510px">
					<tr>
						<td></td>
						<td align=right>
						
							<div id="buttons_search2" class="button_group_search">
								<span class="button_Add_span"><input type="button" id="editlist_add2" name="Add" value="Add" onClick="OpenItem('*new*');return false;"> / <span>
								<input type="button" id="editlist_refresh2" name="Refresh" value="Refresh" onClick="RefreshList(true);return false;">
							</div>
							<div id="buttons_save2" class="button_group_save" style="display:none;">
								<span class="button_SaveClose_span"><input type="button" name="SaveClose2" value="Save/Close" onClick="SaveItem(true);return false;"> / </span>
								<span class="button_Save_span"><input type="button" name="Save2" value="Save" onClick="SaveItem(false);return false;"> / </span>
								<span class="button_Cancel_span"><input type="button" name="Cancel" value="Cancel" onClick="CancelEdit();return false;"></span>
								<span class="button_delete_span"> / <input type="button" name="Delete" value="Delete" onClick="DeleteItem();return false;"></span>
							</div>
							
						</td>
					</tr>
				</table>
				
			</div>

			<br />
			&nbsp;
		</td>
		
		<td>
			&nbsp;
		</td>
	</tr>
</tbody>
</table>
<p>&nbsp;</p>

<script type="text/javascript" language="JavaScript">

	var currentPage=1;
    var pages=1;
    var timerID=-1;
    var KeyEvent = {
        ENTER: 14,
        RETURN: 13,
        DELETE: 46,
        BACKSPACE: 8,
    };
	
var vmApp = new Vue({
	el: '#app',
	data() {
    return {
      params: {
	    rowid: 'none',
        rows: [
          {Form:'Cell-1', SubmitDate:'Cell-2', SpamLevel:'Cell-3', status:'zzz'},
          {Form:'Cell-4', SubmitDate:'Cell-5', SpamLevel:'Cell-6', status:'zzz'},
          {Form:'Cell-7', SubmitDate:'Cell-8', SpamLevel:'Cell-9', status:'zzz'},
        ],
		columns: [
			{data:'Form',sTitle:'Form'},
			{data:'SubmitDate',sTitle:'Submit Date'},
			{data:'SpamLevel',sTitle:'Spam Level'},
			{data:'status',sTitle:'Status'},
		]
      },
	  vSearch: '',
	  vHistory: false,
    }
  },
  created() {
	set_custom();
	this.params.columns = veditlist.columns;
	this.params.rowid = veditlist.rowId;
	this.refreshData();
  },
  methods: {
    clickRow: function(rowID) {
	  OpenItem(rowID);
    },
	refreshData: function() {
		var ts=new Date().getTime();
		var e = '&eclass=' + eClass;
		var fSearch = '&search=' + encodeURI(this.vSearch);
		var fHistory = '&history=' + this.vHistory;
		fetch('runcmd?cmd=editlist-json' + e + fSearch + fHistory + '&ts=' + ts)
		.then(response => {
			if (!response.ok) {
					throw new Error(response.statusText)
				  }
				  return response.json();
				})
		.then(ret => {
			if (ret.msg == 'success') {
				this.params.rows = ret.data;
				ShowPanel('data');
			}
		});
	},
	doKeypress: function($event) {
                this.startSearchTimer();
                if ($event.charCode  == KeyEvent.ENTER || $event.charCode  == KeyEvent.RETURN)
                { $event.preventDefault(); return false; } //Disable Enter key
                if ($event.charCode == KeyEvent.DELETE || $event.charCode  == KeyEvent.BACKSPACE ) { alert('DELETE!'); }
            },
    startSearchTimer: function() {
                this.clearSearchTimer();
                timerID = setInterval("vmApp.doSearch();",600);
            },
    clearSearchTimer: function() {
                // Reset timer
                if (timerID != -1) {
                    // Clear Timer
                    clearInterval(timerID);
                    timerID=-1;
                }
            },
    doSearch: function() {
                this.clearSearchTimer();
                this.refreshData();
            },
  },
});

function refreshData() {
	if (vmApp) {
		vmApp.refreshData();
	}
}

</script>
